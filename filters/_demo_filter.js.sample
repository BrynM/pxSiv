/*
* A simplified "hello world" filter
*/
(function(){

	var myFilter = {}
		, pxSiv // on init, we'll store pxSiv here
		, bpmv; // on init, we'll store bpmv here

	// turn on debug mode
	myFilter.debugMode = true;

	// If your filter has a startup do it here.
	// This is optional.
	myFilter.init = function ( pxs ) {
		// Let's save pxSiv to the local scope.
		pxSiv = pxs;
		// Let's save bpmv to the local scope.
		bpmv = pxSiv.b; // stored in pxSiv as pxSiv.b
		// It's not about the money, it's about sending a message.
		console.log( 'Loaded as filter named "'+this.filtName+'"! - Hello Filter!' );
	};

	// This is called per request to be filtered.
	// Be careful to keep it non-blocking and fast!!!
	// This is required!!!
	myFilter.filter = function ( req, resp ) {
		if ( resp.statusCode >= 400 ) {
			// Already an error status, skip filtering.
			return;
		}
		this.debug( 'Filtering data! Woohoo!', req.url );
		// Any non-undefined will be logged into the DB.
		// To abort saving the data to the DB, set resp.statusCode >= 400.
		// Note that aborting will also abort remaining filters and may result in a client-side error.
		return = 'Woohoo!';
	};

	// This is required!!!
	exports.pxsFilter = myFilter;

})();